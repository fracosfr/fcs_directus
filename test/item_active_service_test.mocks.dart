// Mocks generated by Mockito 5.4.6 from annotations
// in fcs_directus/test/item_active_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i3;
import 'package:fcs_directus/src/core/directus_config.dart' as _i2;
import 'package:fcs_directus/src/core/directus_http_client.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeDirectusConfig_0 extends _i1.SmartFake
    implements _i2.DirectusConfig {
  _FakeDirectusConfig_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_1<T1> extends _i1.SmartFake implements _i3.Response<T1> {
  _FakeResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [DirectusHttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDirectusHttpClient extends _i1.Mock
    implements _i4.DirectusHttpClient {
  MockDirectusHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DirectusConfig get config =>
      (super.noSuchMethod(
            Invocation.getter(#config),
            returnValue: _FakeDirectusConfig_0(
              this,
              Invocation.getter(#config),
            ),
          )
          as _i2.DirectusConfig);

  @override
  void setTokens({String? accessToken, String? refreshToken}) =>
      super.noSuchMethod(
        Invocation.method(#setTokens, [], {
          #accessToken: accessToken,
          #refreshToken: refreshToken,
        }),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i3.Response<T>> get<T>(
    String? path, {
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #get,
              [path],
              {#queryParameters: queryParameters, #options: options},
            ),
            returnValue: _i5.Future<_i3.Response<T>>.value(
              _FakeResponse_1<T>(
                this,
                Invocation.method(
                  #get,
                  [path],
                  {#queryParameters: queryParameters, #options: options},
                ),
              ),
            ),
          )
          as _i5.Future<_i3.Response<T>>);

  @override
  _i5.Future<_i3.Response<T>> post<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
              },
            ),
            returnValue: _i5.Future<_i3.Response<T>>.value(
              _FakeResponse_1<T>(
                this,
                Invocation.method(
                  #post,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i5.Future<_i3.Response<T>>);

  @override
  _i5.Future<_i3.Response<T>> patch<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
              },
            ),
            returnValue: _i5.Future<_i3.Response<T>>.value(
              _FakeResponse_1<T>(
                this,
                Invocation.method(
                  #patch,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i5.Future<_i3.Response<T>>);

  @override
  _i5.Future<_i3.Response<T>> delete<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i3.Options? options,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [path],
              {
                #data: data,
                #queryParameters: queryParameters,
                #options: options,
              },
            ),
            returnValue: _i5.Future<_i3.Response<T>>.value(
              _FakeResponse_1<T>(
                this,
                Invocation.method(
                  #delete,
                  [path],
                  {
                    #data: data,
                    #queryParameters: queryParameters,
                    #options: options,
                  },
                ),
              ),
            ),
          )
          as _i5.Future<_i3.Response<T>>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}
